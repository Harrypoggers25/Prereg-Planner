# -*- coding: utf-8 -*-

# Form implementation generated from reading ui file 'test_listwidget.ui'
#
# Created by: PyQt5 UI code generator 5.15.10
#
# WARNING: Any manual changes made to this file will be lost when pyuic5 is
# run again.  Do not edit this file unless you know what you are doing.


from PyQt5 import QtCore, QtGui, QtWidgets

class HpListWidget(QtWidgets.QListWidget):
    def __init__(self, parent=None):
        super(HpListWidget, self).__init__(parent)
        self.setStyleSheet('QListWidget::item { border: 2px solid black }')
        self.setSpacing(4)

    def addItem(self, title, code, sects, color):
        wgt = QtWidgets.QWidget()
        wgt.setSizePolicy(QtWidgets.QSizePolicy.Fixed, QtWidgets.QSizePolicy.Fixed)
        hlayout = QtWidgets.QHBoxLayout(wgt)
        cb = HpCheckBox('Assets/Images/cb.png', 'Assets/Images/cb_checked.png', wgt)
        cb.setFixedSize(40, 40)
        frm = QtWidgets.QFrame(wgt)
        vlayout = QtWidgets.QVBoxLayout(frm)
        lbl1 = QtWidgets.QLabel(title)
        font = QtGui.QFont('roboto', 10, 600, False)
        lbl1.setFont(font)
        lbl2 = QtWidgets.QLabel(code)
        lbl2.setFont(font)
        lbl3 = QtWidgets.QLabel(f'Sections: {sects}')
        lbl3.setFont(font)
        vlayout.addWidget(lbl1)
        vlayout.addWidget(lbl2)
        vlayout.addWidget(lbl3)
        frm.setLayout(vlayout)
        cbtn = HpImageButton('Assets/Images/red.png','Assets/Images/yellow.png','Assets/Images/green.png', wgt)
        cbtn.setFixedSize(40, 40)
        hlayout.addWidget(cb)
        hlayout.addWidget(frm)
        hlayout.addWidget(cbtn)
        wgt.setLayout(hlayout)
        item = QtWidgets.QListWidgetItem(self)
        item.setSizeHint(wgt.sizeHint())
        super().addItem(item)
        self.setItemWidget(item, wgt)
    
class HpCheckBox(QtWidgets.QAbstractButton):
    def __init__(self, img, img_checked, parent=None):
        super(HpCheckBox, self).__init__(parent)
        self.checked = False
        self.pixmaps = [QtGui.QPixmap(img), QtGui.QPixmap(img_checked)]
        self.current_pixmap = self.pixmaps[0]

    def paintEvent(self, event):
        painter = QtGui.QPainter(self)
        painter.drawPixmap(self.current_pixmap.rect(), self.current_pixmap)

    def sizeHint(self):
        return self.current_pixmap.size()

    def mousePressEvent(self, e):
        self.checked = not self.checked
        if self.checked:
            self.current_pixmap = self.pixmaps[1]
        else:
            self.current_pixmap = self.pixmaps[0]
        return super().mousePressEvent(e)

    def isChecked(self):
        return self.checked

class HpImageButton(QtWidgets.QAbstractButton):
    def __init__(self, img, img_hovered, img_pressed, parent=None):
        super(HpImageButton, self).__init__(parent)
        self.pixmaps = [QtGui.QPixmap(img), QtGui.QPixmap(img_hovered), QtGui.QPixmap(img_pressed)]
        self.current_pixmap = self.pixmaps[0]
        self.previous_pixmap = None
    
    def paintEvent(self, event):
        painter = QtGui.QPainter(self)
        painter.drawPixmap(event.rect(), self.current_pixmap)

    def sizeHint(self):
        return self.current_pixmap.size()
    
    
    def mouseReleaseEvent(self, e):
        self.current_pixmap = self.pixmaps[1]
        return super().mouseReleaseEvent(e)

    def enterEvent(self, a0):
        self.current_pixmap = self.pixmaps[1]
        return super().enterEvent(a0)

    def leaveEvent(self, a0):
        self.current_pixmap = self.pixmaps[0]
        return super().leaveEvent(a0)

    def mousePressEvent(self, e):
        self.current_pixmap = self.pixmaps[2]
        return super().mousePressEvent(e)
    

class Ui_MainWindow(object):
    def setupUi(self, MainWindow):
        MainWindow.setObjectName("MainWindow")
        MainWindow.resize(543, 164)
        self.centralwidget = QtWidgets.QWidget(MainWindow)
        self.centralwidget.setObjectName("centralwidget")
        self.gridLayout = QtWidgets.QGridLayout(self.centralwidget)
        self.gridLayout.setObjectName("gridLayout")
        self.listWidget = HpListWidget(self.centralwidget)
        self.listWidget.setObjectName("listWidget")
        self.gridLayout.addWidget(self.listWidget, 0, 0, 1, 1)
        MainWindow.setCentralWidget(self.centralwidget)

        self.retranslateUi(MainWindow)
        QtCore.QMetaObject.connectSlotsByName(MainWindow)

        self.listWidget.addItem("COMPUTER INFORMATION ENGINEERING", "ECIE 4101", [1, 2, 3], None)
        self.listWidget.addItem("SOFTWARE ENGINEERING DESIGN", "ECIE 4311", [1, 2], None)
        self.listWidget.addItem("MULTIMEDIA INFORMATION SYSTEM", "ECIE 4312", [1, 2], None)
        self.listWidget.addItem("COMPUTER COMMUNICATION AND NETWORKING", "ECIE 4313", [1, 2, 3], None)
        self.listWidget.addItem("OBJECT ORIENTED PROGRAMMING", "ECIE 4351", [2, 3], None)
        self.listWidget.addItem("FINAL YEAR PROJECT I", "ECIE 4398", [1, 3], None)
        
    def retranslateUi(self, MainWindow):
        _translate = QtCore.QCoreApplication.translate
        MainWindow.setWindowTitle(_translate("MainWindow", "MainWindow"))


if __name__ == "__main__":
    import sys
    app = QtWidgets.QApplication(sys.argv)
    MainWindow = QtWidgets.QMainWindow()
    ui = Ui_MainWindow()
    ui.setupUi(MainWindow)
    MainWindow.show()
    sys.exit(app.exec_())
